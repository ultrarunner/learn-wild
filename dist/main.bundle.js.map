{"version":3,"sources":["webpack:///./src/app/dashboard/cards/nyt/nyt.component.ts","webpack:///./src/app/dashboard/cards/nyt/nyt.service.ts","webpack:///./src/app/dashboard/cards/rss/rss-component.ts","webpack:///./src/app/dashboard/cards/rss/rss.service.ts","webpack:///./src/app/shared/simple-dialog/simple-dialog.component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard-component-outlet.ts","webpack:///./src/app/dashboard/dashboard.ts","webpack:///./src/app/pipe/strip-html-tags.pipe.ts","webpack:///./src/app/pipe/upper-case-first-letter.pipe.ts","webpack:///./src/app/shared/single-media-player/single-media-player.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/shared/simple-dialog/simple-dialog.component.css","webpack:///./src/app/shared/single-media-player/single-media-player.component.css","webpack:///./src/app/shared/single-media-player/single-media-player.component.html","webpack:///./src/app/shared/events.service.ts","webpack:///./src/app/shared/simple-dialog/dialog.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { DashboardComponent } from '../../dashboard-component';\nimport { NytService } from './nyt.service';\nimport { Nyt, Result } from '../../../model/nyt';\nimport { UpperCaseFirstLetterPipe } from '../../../pipe/upper-case-first-letter.pipe';\n\nimport { DialogService } from '../../../shared/simple-dialog/dialog.service';\n\n@Component({\n  selector: 'app-component-nyt',\n  template: `\n      <md-card masonry-brick style=\"min-width: 280px; max-width: 320px; margin: 5px;\" (click)=\"onSelected()\">\n        <md-card-header *ngIf=\"results.length\">\n          <md-card-title>{{title}} <font color='red'>|</font> {{ options | upperCaseFirstLetter }}</md-card-title>\n        </md-card-header>\n        <md-card-content *ngIf=\"!results.length\">\n          <md-spinner style=\"margin-bottom: 10px;\"></md-spinner>              \n          Loading data from... {{end_point}}\n        </md-card-content>\n        <md-card-content *ngIf=\"results.length\">\n          <md-list-item *ngFor=\"let item of results\">         \n            <button md-icon-button (click)=\"openDialog(item)\">\n              <md-icon>info</md-icon>\n            </button>\n          <button md-icon-button (click)='onOpenLink(item)' mdTooltip=\"Open Article in New Window\" mdTooltipPosition=\"above\">\n            <md-icon>open_in_new</md-icon>\n          </button>            \n            {{item.title}}             \n          </md-list-item>\n        </md-card-content>\n        <md-card-actions style=\"text-align: right;\">\n          <button md-mini-fab (click)='onPullData()' mdTooltip=\"Refresh\" mdTooltipPosition=\"above\">\n            <md-icon>refresh</md-icon>\n          </button>\n        </md-card-actions>\n      </md-card>`\n})\n\nexport class NytComponent implements DashboardComponent {\n\n  private nyt: any = {};\n  private results: any = [];\n\n  @Input() title: string;\n  @Input() end_point: string;\n  @Input() count: number;\n  @Input() options: string;\n\n  @Output() componentSelected = new EventEmitter();\n\n  constructor(\n    private nytService: NytService,\n    private dialogService: DialogService,\n  ) { }\n\n  ngOnInit(): void {\n    this.onPullData();\n  }\n\n  onOpenLink(result: Result) {\n    window.open(result.short_url, '_blank');\n  }\n\n  onPullData() {\n    this.nytService.getFeedContent(this.options)\n      .delay(1000)\n      .subscribe(\n      result => {\n        // console.log(result.items);\n        this.nyt = result,\n          this.results = result.results.filter((item, index) => { return index < this.count; });\n      },\n      error => console.log(error)\n      );\n  }\n\n  openDialog(result: Result) {\n    // console.log(feedEntry);\n    const title = result.title + '| ' + new DatePipe('en-US').transform(result.published_date, 'yyyy-MM-dd');\n    this.dialogService.confirm(title, result.abstract);\n  }\n\n  onSelected() {\n    // console.log('Component Selection Event Emitted:'  + this.end_point);\n    this.componentSelected.emit(this);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/cards/nyt/nyt.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, RequestOptions, URLSearchParams } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Nyt } from '../../../model/nyt';\r\n\r\n@Injectable()\r\nexport class NytService {\r\n\r\n  private nytBaseEndPoint: string = 'https://api.nytimes.com/svc/';\r\n\r\n  private nytApiTopStories: any = {\r\n    endpoint: 'topstories/v2/{options}.json',\r\n    apikey: 'ddaa74ef8a3d2b23e69f612bbd6c0321:3:70269458'\r\n  };\r\n\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  getFeedContent(options: string): Observable<Nyt> {\r\n    let parameters: URLSearchParams = new URLSearchParams();\r\n    parameters.set('api-key', this.nytApiTopStories.apikey);\r\n    let requestOptions = new RequestOptions();\r\n    requestOptions.search = parameters;\r\n\r\n    return this.http.get(this.nytBaseEndPoint + this.nytApiTopStories.endpoint.replace('{options}', options), requestOptions)\r\n      .map(this.extractFeeds)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private extractFeeds(res: Response): Nyt {\r\n    let feed = res.json();\r\n    return feed || {};\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    // We'd also dig deeper into the error to get a better message\r\n    const errorMessage = (error.message) ? error.message :\r\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n    console.error(errorMessage); // log to console instead\r\n    return Observable.throw(errorMessage);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/cards/nyt/nyt.service.ts","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { DashboardComponent } from '../../dashboard-component';\r\nimport { RssService } from './rss.service';\r\nimport { FeedInfo, FeedEntry, FeedEnclosure } from '../../../model/feed';\r\n\r\nimport { DialogService } from '../../../shared/simple-dialog/dialog.service';\r\nimport { NgRadio } from '../../../shared/events.service';\r\n\r\n@Component({\r\n  selector: 'app-component-rss',\r\n  template: `\r\n      <md-card masonry-brick style=\"min-width: 280px; max-width: 320px; margin: 5px;\" (click)=\"onSelected()\">\r\n        <md-card-header *ngIf=\"items.length\">\r\n          <div md-card-avatar *ngIf=\"feed.image!=''\"><img src=\"{{feed.image}}\" style=\"width: 30px;\"/></div>\r\n          <md-card-title>{{feed.title}} <font color=\"red\">|</font> {{feed.author}}</md-card-title>\r\n          <md-card-subtitle>{{feed.description}} </md-card-subtitle>\r\n        </md-card-header>\r\n        <md-card-content *ngIf=\"!items.length\">\r\n          <md-spinner style=\"margin-bottom: 10px;\"></md-spinner>              \r\n          Loading data from... {{end_point}}\r\n        </md-card-content>\r\n        <md-card-content *ngIf=\"items.length\">\r\n          <md-list-item *ngFor=\"let item of items\">         \r\n            <button md-icon-button (click)=\"openDialog(item)\" mdTooltip=\"View Summary\">\r\n              <md-icon>info</md-icon>\r\n            </button>\r\n            <button mdTooltip=\"Play Audio\" md-icon-button *ngIf=\"item.enclosure.type != null\" (click)=\"onSelectMedia(item.enclosure)\">\r\n              <md-icon>play_circle_filled</md-icon>\r\n            </button>            \r\n            {{item.title}}             \r\n          </md-list-item>\r\n        </md-card-content>\r\n        <md-card-actions style=\"text-align: right;\">\r\n          <button md-mini-fab (click)='onOpenLink()' mdTooltip=\"Open in New Window\" mdTooltipPosition=\"above\">\r\n            <md-icon>open_in_new</md-icon>\r\n          </button>\r\n          <button md-mini-fab (click)='onPullData()' mdTooltip=\"Refresh\" mdTooltipPosition=\"above\">\r\n            <md-icon>refresh</md-icon>\r\n          </button>\r\n        </md-card-actions>\r\n      </md-card>\r\n      `\r\n})\r\n\r\nexport class RssComponent implements DashboardComponent {\r\n\r\n  private feed: any = {};\r\n  private items: any = [];\r\n\r\n  @Input() title: string;\r\n  @Input() end_point: string;\r\n  @Input() count: number;\r\n  @Input() options: string;\r\n\r\n  @Output() componentSelected = new EventEmitter();\r\n\r\n  constructor(\r\n    private feedService: RssService,\r\n    private dialogService: DialogService,\r\n    private radio: NgRadio\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.onPullData();\r\n  }\r\n\r\n  onPullData() {\r\n    this.feedService.getFeedContent(this.end_point)\r\n      .delay(1000)\r\n      .subscribe(\r\n      result => {\r\n        // console.log(result.items);\r\n        this.feed = result.feed,\r\n          this.items = result.items.filter((item, index) => { return index < this.count; });\r\n      },\r\n      error => console.log(error)\r\n      );\r\n  }\r\n\r\n  openDialog(feedEntry: FeedEntry) {\r\n    // console.log(feedEntry);\r\n    const title = feedEntry.title + '| ' + feedEntry.pubDate;\r\n    this.dialogService.confirm(title, feedEntry.description);\r\n  }\r\n\r\n  onSelectMedia(enclosure: FeedEnclosure) {\r\n    console.log('Media Selection Radio Casting:'  + enclosure.link);\r\n    const mediaType = enclosure.type.substring(0, enclosure.type.indexOf('/'));\r\n    const key = 'PlayMedia:' + mediaType;\r\n    // console.log('key: ' + key);\r\n    this.radio.cast(key, enclosure);\r\n  }\r\n\r\n  onSelected() {\r\n    // console.log('Component Selection Event Emitted:'  + this.end_point);\r\n    this.componentSelected.emit(this);\r\n  }\r\n\r\n  onOpenLink() {\r\n    window.open(this.feed.link, '_blank');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/cards/rss/rss-component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Feed } from '../../../model/feed';\r\n\r\n@Injectable()\r\nexport class RssService {\r\n\r\n  private rssToJsonServiceBaseUrl: string = 'https://rss2json.com/api.json?rss_url=';\r\n\r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  getFeedContent(url: string): Observable<Feed> {\r\n    return this.http.get(this.rssToJsonServiceBaseUrl + url)\r\n      .map(this.extractFeeds)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private extractFeeds(res: Response): Feed {\r\n    const feed = res.json();\r\n    return feed || {};\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    // We'd also dig deeper into the error to get a better message\r\n    const errMsg = (error.message) ? error.message :\r\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n    console.error(errMsg); // log to console instead\r\n    return Observable.throw(errMsg);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/cards/rss/rss.service.ts","import { Component, OnInit } from '@angular/core';\r\nimport { MdDialog, MdDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-simple-dialog',\r\n  template: `\r\n      <h2 md-dialog-title>{{title}}</h2>\r\n      <md-dialog-content [innerHtml]=message></md-dialog-content>\r\n  `,\r\n  styleUrls: ['./simple-dialog.component.css']\r\n})\r\nexport class SimpleDialogComponent implements OnInit {\r\n\r\n  public message: string;\r\n  public title: string;\r\n\r\n  constructor(public dialogRef: MdDialogRef<SimpleDialogComponent>) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/simple-dialog/simple-dialog.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 193;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 193\n// module chunks = 1","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    template: `\r\n        <md-toolbar style=\"background-color: black;\">\r\n            <span style=\"color: white;\">\r\n                <a href=\"\\\">\r\n                    <img \r\n                    src=\"/assets/borntolearnwild.png\" \r\n                    style=\"margin-right: 10px; width:30px; height: 30px;\" \r\n                    alt=\"Learn Wild | Not every site can become a great source of knowledge; but a great source of knowledge can come from any site.\">\r\n                </a>                \r\n            </span>\r\n            <span class=\"example-spacer\"></span>\r\n            <span style=\"width: 100%\"><app-single-media-player></app-single-media-player></span>            \r\n            <md-icon class=\"example-icon\" style=\"color: white;\">account_circle</md-icon>\r\n            <md-icon class=\"example-icon\" style=\"color: white;\">delete</md-icon>\r\n        </md-toolbar>\r\n        <div style=\"margin-top:5px;\">   \r\n            <dashboard></dashboard>\r\n        </div>        \r\n    `\r\n})\r\n\r\nexport class AppComponent {\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MaterialModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { MasonryModule } from 'angular2-masonry';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n// dashboard\r\nimport { Dashboard } from './dashboard/dashboard';\r\nimport { DashboardComponentOutlet } from './dashboard/dashboard-component-outlet';\r\n\r\n// card components\r\nimport { RssComponent } from './dashboard/cards/rss/rss-component';\r\nimport { RssService } from './dashboard/cards/rss/rss.service';\r\n\r\nimport { NytComponent } from './dashboard/cards/nyt/nyt.component';\r\nimport { NytService } from './dashboard/cards/nyt/nyt.service';\r\n\r\n// shared services\r\nimport { DialogService } from './shared/simple-dialog/dialog.service';\r\nimport { NgRadio } from './shared/events.service';\r\nimport { SimpleDialogComponent } from './shared/simple-dialog/simple-dialog.component';\r\n\r\nimport { StripHtmlTagsPipe } from './pipe/strip-html-tags.pipe';\r\n\r\n// media player component\r\nimport { VgCoreModule } from 'videogular2/core';\r\nimport { VgControlsModule } from 'videogular2/controls';\r\nimport { VgOverlayPlayModule } from 'videogular2/overlay-play';\r\nimport { VgBufferingModule } from 'videogular2/buffering';\r\nimport { SingleMediaPlayerComponent } from './shared/single-media-player/single-media-player.component';\r\nimport { UpperCaseFirstLetterPipe } from './pipe/upper-case-first-letter.pipe';\r\n\r\n@NgModule({\r\n\r\n  declarations: [\r\n    AppComponent,\r\n    Dashboard,\r\n    DashboardComponentOutlet,\r\n    RssComponent,\r\n    NytComponent,\r\n\r\n    UpperCaseFirstLetterPipe,    \r\n    StripHtmlTagsPipe,\r\n\r\n    SimpleDialogComponent,\r\n    SingleMediaPlayerComponent\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    MasonryModule,\r\n\r\n    MaterialModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n\r\n    VgCoreModule,\r\n    VgControlsModule,\r\n    VgOverlayPlayModule,\r\n    VgBufferingModule\r\n  ],\r\n\r\n  providers: [\r\n    DatePipe,\r\n    RssService,\r\n    NytService,\r\n    DialogService,\r\n    NgRadio\r\n  ],\r\n\r\n  bootstrap: [\r\n    AppComponent\r\n    // don't do this:\r\n    // http://stackoverflow.com/questions/38787795/why-ngoninit-called-twice\r\n    // SingleMediaPlayerComponent\r\n  ],\r\n\r\n  entryComponents: [\r\n    RssComponent,\r\n    NytComponent,\r\n    SimpleDialogComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {\r\n    Component,\r\n    ViewContainerRef,\r\n    ComponentFactoryResolver,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    OnChanges,\r\n    OnInit\r\n} from '@angular/core';\r\n\r\nimport { DashboardComponent } from './dashboard-component';\r\nimport { FeedEnclosure } from '../model/feed';\r\n\r\n@Component({\r\n    selector: 'dashboard-component-outlet',\r\n    template: ''\r\n})\r\n\r\nexport class DashboardComponentOutlet implements DashboardComponent, OnChanges, OnInit {\r\n\r\n    @Input() type;\r\n    @Input() title: string;\r\n    @Input() end_point: string;\r\n    @Input() count: number;\r\n    @Input() options: string;\r\n\r\n    @Output() componentSelected = new EventEmitter();\r\n\r\n    private dynamicInstance: DashboardComponent;\r\n\r\n    constructor(private viewContainer: ViewContainerRef,\r\n        private componentFactoryResolver: ComponentFactoryResolver) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnChanges(changes) {\r\n\r\n        if (changes.type) {\r\n            this.viewContainer.clear();\r\n\r\n            // Create Component\r\n            const factory = this.componentFactoryResolver.resolveComponentFactory(this.type);\r\n            const componentRef = this.viewContainer.createComponent(factory);\r\n            this.dynamicInstance = componentRef.instance as DashboardComponent;\r\n\r\n            // Set up Event-Handlers and delegate to own handlers\r\n            this.dynamicInstance.componentSelected.subscribe(e => this.componentSelected.emit(e));\r\n        }\r\n\r\n        // Delegate Properties\r\n        if (changes.title) {\r\n            this.dynamicInstance.title = this.title;\r\n            this.dynamicInstance.end_point = this.end_point;\r\n            this.dynamicInstance.count = this.count;\r\n            this.dynamicInstance.options = this.options;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard-component-outlet.ts","import { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { AngularMasonry, MasonryOptions } from 'angular2-masonry';\r\n\r\nimport { RssComponent } from './cards/rss/rss-component';\r\nimport { FeedEnclosure } from '../model/feed';\r\n\r\nimport { NytComponent } from './cards/nyt/nyt.component';\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    template: `\r\n        <masonry style=\"margin: 0 auto;\">\r\n            <dashboard-component-outlet *ngFor=\"let info of componentInfos\"\r\n                [type]=\"info.type\" \r\n                [title]=\"info.title\" \r\n                [end_point]=\"info.end_point\"\r\n                [count]=\"info.count\"\r\n                [options]=\"info.options\"\r\n                (componentSelected)=\"selectComponent($event)\">\r\n            </dashboard-component-outlet>\r\n        </masonry>\r\n        <div *ngIf=\"selectedComponent\" class=\"col-sm-12\">\r\n            <b>Selected: </b> {{ selectedComponent.title }} | {{ selectedComponent.end_point }} | {{ selectedComponent.count }}\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class Dashboard implements AfterViewInit {\r\n    @ViewChild(AngularMasonry) masonry: AngularMasonry;\r\n\r\n    selectedComponent: Dashboard;\r\n\r\n    options: MasonryOptions = {\r\n        transitionDuration: '0.35',\r\n        fitWidth: true,\r\n        gutter: 5,\r\n        percentPosition: true\r\n    };\r\n\r\n    private componentInfos = [\r\n        {\r\n            type: RssComponent,\r\n            title: 'Freakonomics',\r\n            end_point: 'http://feeds2.feedburner.com/freakonomicsradio',\r\n            count: 6\r\n        },\r\n        {\r\n            type: NytComponent,\r\n            title: 'NYT - Top Stories',\r\n            end_point: '',\r\n            options: 'world',\r\n            count: 5\r\n        }, \r\n        {\r\n            type: NytComponent,\r\n            title: 'NYT - Top Stories',\r\n            end_point: '',\r\n            options: 'technology',\r\n            count: 7\r\n        },                       \r\n        {\r\n            type: RssComponent,\r\n            title: 'Channel 9',\r\n            end_point: 'https://channel9.msdn.com/all/rss',\r\n            count: 8\r\n        },\r\n        {\r\n            type: RssComponent,\r\n            title: 'Ted Talks',\r\n            end_point: 'https://www.ted.com/talks/rss',\r\n            count: 10\r\n        },\r\n        {\r\n            type: RssComponent,\r\n            title: 'Adventures in Angular',\r\n            end_point: 'https://feeds.feedwrench.com/AdventuresInAngular.rss',\r\n            count: 10\r\n        },\r\n        {\r\n            type: RssComponent,\r\n            title: 'Scott Hanselman\\'s blog',\r\n            end_point: 'http://feeds.hanselman.com/scotthanselman',\r\n            count: 4\r\n        }\r\n    ];\r\n\r\n    ngAfterViewInit() {\r\n        this.masonry.layoutComplete.subscribe(() => {\r\n            //console.log('masonry layout complete.');\r\n        });\r\n    }\r\n\r\n    selectComponent(selected: any) {\r\n        //console.log('Component Selection Event received by Dashboard: ' + selected.end_point);\r\n        this.selectedComponent = selected;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'stripHtmlTags'\r\n})\r\nexport class StripHtmlTagsPipe implements PipeTransform {\r\n\r\n  private tagBody: string = '(?:[^\"\\'>]|\"[^\"]*\"|\\'[^\\']*\\')*';\r\n  private tagOrComment: RegExp = new RegExp(\r\n    '<(?:'\r\n    // Comment body.\r\n    + '!--(?:(?:-*[^->])*--+|-?)'\r\n    // Special \"raw text\" elements whose content should be elided.\r\n    + '|script\\\\b' + this.tagBody + '>[\\\\s\\\\S]*?</script\\\\s*'\r\n    + '|style\\\\b' + this.tagBody + '>[\\\\s\\\\S]*?</style\\\\s*'\r\n    // Regular name\r\n    + '|/?[a-z]'\r\n    + this.tagBody\r\n    + ')>',\r\n    'gi');\r\n\r\n  transform(value: string): string {\r\n    let oldHtml;\r\n    do {\r\n      oldHtml = value;\r\n      value = value.replace(this.tagOrComment, '');\r\n    } while (value !== oldHtml);\r\n    return value.replace(/</g, '&lt;');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipe/strip-html-tags.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'upperCaseFirstLetter'\n})\nexport class UpperCaseFirstLetterPipe implements PipeTransform {\n\n  transform(value: string): string {\n    return (!!value) ? value.charAt(0).toUpperCase() + value.substr(1).toLowerCase() : '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipe/upper-case-first-letter.pipe.ts","import { Component, OnInit, EventEmitter, Output, AfterViewInit } from '@angular/core';\r\nimport { FeedEnclosure } from '../../model/feed';\r\nimport { NgRadio } from '../../shared/events.service';\r\nimport { VgAPI } from 'videogular2/core';\r\n\r\n@Component({\r\n  selector: 'app-single-media-player',\r\n  templateUrl: './single-media-player.component.html',\r\n  styleUrls: ['./single-media-player.component.css']\r\n})\r\n\r\nexport class SingleMediaPlayerComponent implements OnInit {\r\n\r\n  sources: Array<Object> = [];\r\n  videoSources: Array<Object> = [];\r\n\r\n  selectedMedia: FeedEnclosure;\r\n  api: VgAPI;\r\n\r\n  constructor(private radio: NgRadio) {\r\n    console.log('Media Player Initialized...');\r\n  }\r\n\r\n  onVideoPlayerReady(api: VgAPI) {\r\n    this.api = api;\r\n    this.api.getDefaultMedia().subscriptions.loadedMetadata.subscribe(this.play.bind(this));\r\n  }\r\n\r\n  play() {\r\n    this.api.play();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.radio.on('PlayMedia:audio').subscribe(message => {\r\n      this.selectedMedia = <FeedEnclosure>message;\r\n      console.log('Media Selection Radio (AUDIO) Receiving:' + this.selectedMedia.link + '|' + this.selectedMedia.type);\r\n      this.sources = new Array<Object>();\r\n      this.sources.push({\r\n        src: this.selectedMedia.link,\r\n        type: this.selectedMedia.type\r\n      });\r\n      this.api.getDefaultMedia().currentTime = 0;\r\n      this.api.play();\r\n    });\r\n\r\n    this.radio.on('PlayMedia:video').subscribe(message => {\r\n      this.selectedMedia = <FeedEnclosure>message;\r\n      console.log('Media Selection Radio (VIDEO) Receiving:' + this.selectedMedia.link + '|' + this.selectedMedia.type);\r\n      this.sources = new Array<Object>();\r\n      this.sources.push({\r\n        src: this.selectedMedia.link,\r\n        type: this.selectedMedia.type\r\n      });\r\n      this.api.getDefaultMedia().currentTime = 0;\r\n      this.api.play();\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/single-media-player/single-media-player.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/simple-dialog/simple-dialog.component.css\n// module id = 283\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/single-media-player/single-media-player.component.css\n// module id = 284\n// module chunks = 1","module.exports = \"<vg-player style=\\\"height: 50px;\\\" (onPlayerReady)=\\\"onVideoPlayerReady($event)\\\">\\r\\n    <vg-controls>\\r\\n        <vg-play-pause></vg-play-pause>\\r\\n        <vg-playback-button></vg-playback-button>\\r\\n\\r\\n        <vg-time-display vgProperty=\\\"current\\\" vgFormat=\\\"mm:ss\\\"></vg-time-display>\\r\\n\\r\\n        <vg-scrub-bar>\\r\\n            <vg-scrub-bar-current-time></vg-scrub-bar-current-time>\\r\\n            <vg-scrub-bar-buffering-time></vg-scrub-bar-buffering-time>\\r\\n        </vg-scrub-bar>\\r\\n\\r\\n        <vg-time-display vgProperty=\\\"left\\\" vgFormat=\\\"mm:ss\\\"></vg-time-display>\\r\\n        <vg-time-display vgProperty=\\\"total\\\" vgFormat=\\\"mm:ss\\\"></vg-time-display>\\r\\n\\r\\n        <vg-mute></vg-mute>\\r\\n\\r\\n        <vg-fullscreen></vg-fullscreen>\\r\\n    </vg-controls>\\r\\n\\r\\n    <audio #media [vgMedia]=\\\"media\\\" id=\\\"myAudio\\\" preload=\\\"auto\\\">\\r\\n        <source *ngFor=\\\"let audio of sources\\\" [src]=\\\"audio.src\\\" [type]=\\\"audio.type\\\">\\r\\n    </audio>\\r\\n\\r\\n    <!--<video #media [vgMedia]=\\\"media\\\" id=\\\"myAudio\\\" preload=\\\"auto\\\" crossorigin>\\r\\n        <source *ngFor=\\\"let audio of sources\\\" [src]=\\\"audio.src\\\" [type]=\\\"audio.type\\\">\\r\\n    </video>-->\\r\\n\\r\\n</vg-player>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/single-media-player/single-media-player.component.html\n// module id = 292\n// module chunks = 1","// https://github.com/govorov/ng-radio\r\n\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/filter';\r\nimport 'rxjs/add/operator/map';\r\n\r\ninterface RadioMessage {\r\n  key: string;\r\n  data?: any;\r\n}\r\n\r\nexport class NgRadio {\r\n  private _eventBus: Subject<RadioMessage>;\r\n  private separator = ':';\r\n\r\n  constructor() {\r\n    this._eventBus = new Subject<RadioMessage>();\r\n  }\r\n\r\n  keyMatch(key, wildcard) {\r\n    let w = '*';\r\n    let ww = '**';\r\n\r\n    let partMatch = (wl, k) => {\r\n      let match = (wl === w) || (wl === k);\r\n      return match;\r\n    };\r\n\r\n    let sep = this.separator;\r\n    let kArr = key.split(sep);\r\n    let wArr = wildcard.split(sep);\r\n\r\n    let kLen = kArr.length;\r\n    let wLen = wArr.length;\r\n    let max = Math.max(kLen, wLen);\r\n\r\n    for (let i = 0; i < max; i++) {\r\n      let cK = kArr[i];\r\n      let cW = wArr[i];\r\n      // '**' match all fragments\r\n      if (cW == ww && (typeof cK !== 'undefined')) { return true; }\r\n      // test if fragments match\r\n      if (!partMatch(cW, cK)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  cast(key: string, data?: any) {\r\n    if (typeof key !== 'string' || !key.length) {\r\n      throw 'Bad key. Please provide a string';\r\n    }\r\n    this._eventBus.next({ key, data });\r\n  }\r\n\r\n  on<T>(key: string): Observable<T> {\r\n    return this._eventBus.asObservable()\r\n      .filter((event) => {\r\n        return this.keyMatch(event.key, key);\r\n      })\r\n      .map(event => <T>event.data);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/events.service.ts","import { Observable } from 'rxjs/Rx';\r\nimport { SimpleDialogComponent } from './simple-dialog.component';\r\nimport { MdDialogRef, MdDialog, MdDialogConfig } from '@angular/material';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n\r\n    constructor(private dialog: MdDialog) { }\r\n\r\n    public confirm(title: string, message: string): Observable<boolean> {\r\n\r\n        let dialogRef: MdDialogRef<SimpleDialogComponent>;\r\n\r\n        dialogRef = this.dialog.open(SimpleDialogComponent);\r\n        dialogRef.componentInstance.title = title;\r\n        dialogRef.componentInstance.message = message;\r\n\r\n        return dialogRef.afterClosed();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/simple-dialog/dialog.service.ts"],"sourceRoot":""}