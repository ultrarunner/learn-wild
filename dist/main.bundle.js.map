{"version":3,"sources":["webpack:///./src/app/dashboard/cards/rss-component.ts","webpack:///./src/app/dashboard/cards/rss.service.ts","webpack:///./src/app/shared/simple-dialog/dialog.service.ts","webpack:///./src/app/shared/simple-dialog/simple-dialog.component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard-component-outlet.ts","webpack:///./src/app/dashboard/dashboard.ts","webpack:///./src/app/pipe/strip-html-tags.pipe.ts","webpack:///./src/app/shared/single-media-player/single-media-player.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/shared/simple-dialog/simple-dialog.component.css","webpack:///./src/app/shared/single-media-player/single-media-player.component.css","webpack:///./src/app/shared/single-media-player/single-media-player.component.html","webpack:///./src/app/shared/events.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAkF;AAEvC;AAG+B;AACpB;AAsCtD,IAAa,YAAY;IAWvB,sBACU,WAAuB,EACvB,aAA4B,EAC5B,KAAc;QAFd,gBAAW,GAAX,WAAW,CAAY;QACvB,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAS;QAZhB,SAAI,GAAQ,EAAE,CAAC;QACf,UAAK,GAAQ,EAAE,CAAC;QAMd,sBAAiB,GAAG,IAAI,2DAAY,EAAE,CAAC;IAM7C,CAAC;IAEL,+BAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,iCAAU,GAAV;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC;aACX,SAAS,CACV,gBAAM;YACJ,6BAA6B;YAC7B,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI;gBACrB,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,KAAK,IAAO,MAAM,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACtF,CAAC,EACD,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC1B,CAAC;IACN,CAAC;IAED,iCAAU,GAAV,UAAW,SAAoB;QAC7B,0BAA0B;QAC1B,IAAM,KAAK,GAAG,SAAS,CAAC,KAAK,GAAG,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC;QACzD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;IAC3D,CAAC;IAED,oCAAa,GAAb,UAAc,SAAwB;QACpC,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAI,SAAS,CAAC,IAAI,CAAC,CAAC;QAChE,IAAM,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3E,IAAM,GAAG,GAAG,YAAY,GAAG,SAAS,CAAC;QACrC,8BAA8B;QAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAClC,CAAC;IAED,iCAAU,GAAV;QACE,uEAAuE;QACvE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,iCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACxC,CAAC;IACH,mBAAC;AAAD,CAAC;AAnDU;IAAR,2EAAK,EAAE;;2CAAe;AACd;IAAR,2EAAK,EAAE;;+CAAmB;AAClB;IAAR,2EAAK,EAAE;;2CAAe;AAEb;IAAT,4EAAM,EAAE;;uDAAwC;AATtC,YAAY;IApCxB,+EAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE,+sDA+BL;KACN,CAAC;yDAcuB,gEAAU,oBAAV,gEAAU,sDACR,2FAAa,oBAAb,2FAAa,sDACrB,uEAAO,oBAAP,uEAAO;GAdb,YAAY,CAwDxB;AAxDwB;;;;;;;;;;;;;;;;;;;;;;;;AC5CkB;AACI;AACV;AAIrC,IAAa,UAAU;IAIrB,oBACU,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAHZ,4BAAuB,GAAW,wCAAwC,CAAC;IAI/E,CAAC;IAEL,mCAAc,GAAd,UAAe,GAAW;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC;aACrD,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAEO,iCAAY,GAApB,UAAqB,GAAa;QAChC,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACxB,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;IACpB,CAAC;IAEO,gCAAW,GAAnB,UAAoB,KAAU;QAC5B,oEAAoE;QACpE,8DAA8D;QAC9D,IAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;YAC5C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;QAC1E,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,yBAAyB;QAChD,MAAM,CAAC,mDAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IACH,iBAAC;AAAD,CAAC;AA3BY,UAAU;IADtB,gFAAU,EAAE;yDAMK,2DAAI,oBAAJ,2DAAI;GALT,UAAU,CA2BtB;AA3BsB;;;;;;;;;;;;;;;;;;;;;;;ACL2C;AACQ;AAC/B;AAG3C,IAAa,aAAa;IAEtB,uBAAoB,MAAgB;QAAhB,WAAM,GAAN,MAAM,CAAU;IAAI,CAAC;IAElC,+BAAO,GAAd,UAAe,KAAa,EAAE,OAAe;QAEzC,IAAI,SAA6C,CAAC;QAElD,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uFAAqB,CAAC,CAAC;QACpD,SAAS,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1C,SAAS,CAAC,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IACL,oBAAC;AAAD,CAAC;AAdY,aAAa;IADzB,gFAAU,EAAE;yDAGmB,mEAAQ,oBAAR,mEAAQ;GAF3B,aAAa,CAczB;AAdyB;;;;;;;;;;;;;;;;;;;;;;ACNwB;AACQ;AAU1D,IAAa,qBAAqB;IAKhC,+BAAmB,SAA6C;QAA7C,cAAS,GAAT,SAAS,CAAoC;IAAI,CAAC;IAErE,wCAAQ,GAAR;IACA,CAAC;IACH,4BAAC;AAAD,CAAC;AATY,qBAAqB;IARjC,+EAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE,mHAGT;QACD,kCAA4C;KAC7C,CAAC;yDAM8B,sEAAW,oBAAX,sEAAW;GAL9B,qBAAqB,CASjC;AATiC;;;;;;;;;ACXlC;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oFAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;ACVV;AAyB1C,IAAa,YAAY;IAAzB;IACA,CAAC;IAAD,mBAAC;AAAD,CAAC;AADY,YAAY;IAvBxB,+EAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,QAAQ,EAAE,89BAkBT;KACJ,CAAC;GAEW,YAAY,CACxB;AADwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBiC;AACjB;AACI;AACF;AACQ;AAC4B;AACvB;AACP;AAEC;AACa;AACmB;AAEnC;AAE/C,uEAAuE;AACZ;AACW;AACpB;AAElD,SAAS;AACuD;AACuB;AAEvC;AACQ;AACO;AACL;AAC8C;AAgDxG,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IA9CrB,8EAAQ,CAAC;QAER,YAAY,EAAE;YACZ,qEAAY;YACZ,uEAAS;YACT,wGAAwB;YACxB,oFAAY;YACZ,sFAAiB;YACjB,6GAAqB;YACrB,8HAA0B;SAC3B;QAED,OAAO,EAAE;YACP,gFAAa;YACb,mEAAW;YACX,iEAAU;YACV,uEAAa;YAEb,yEAAc,CAAC,OAAO,EAAE;YACxB,qGAAuB;YACvB,8EAAgB;YAEhB,+DAAY;YACZ,uEAAgB;YAChB,8EAAmB;YACnB,yEAAiB;SAClB;QAED,SAAS,EAAE;YACT,iFAAU;YACV,4FAAa;YACb,wEAAO;SACR;QAED,SAAS,EAAE;YACT,qEAAY;YACZ,iBAAiB;YACjB,wEAAwE;YACxE,6BAA6B;SAC9B;QAED,eAAe,EAAE;YACf,oFAAY;YACZ,6GAAqB;SACtB;KACF,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;ACnEC;AAUvB,IAAa,wBAAwB;IAUjC,kCAAoB,aAA+B,EACvC,wBAAkD;QAD1C,kBAAa,GAAb,aAAa,CAAkB;QACvC,6BAAwB,GAAxB,wBAAwB,CAA0B;QANpD,sBAAiB,GAAG,IAAI,2DAAY,EAAE,CAAC;IAOjD,CAAC;IAED,2CAAQ,GAAR;IACA,CAAC;IAED,8CAAW,GAAX,UAAY,OAAO;QAAnB,iBAoBC;QAlBG,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAE3B,mBAAmB;YACnB,IAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjF,IAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YACjE,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,QAA8B,CAAC;YAEnE,qDAAqD;YACrD,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC1F,CAAC;QAED,sBAAsB;QACtB,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxC,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAChD,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5C,CAAC;IACL,CAAC;IACL,+BAAC;AAAD,CAAC;AApCY;IAAR,2EAAK,EAAE;;uDAAe;AACd;IAAR,2EAAK,EAAE;;2DAAmB;AAClB;IAAR,2EAAK,EAAE;;uDAAe;AACb;IAAT,4EAAM,EAAE;;mEAAwC;AACxC;IAAR,2EAAK,EAAE;;sDAAM;AANL,wBAAwB;IALpC,+EAAS,CAAC;QACP,QAAQ,EAAE,4BAA4B;QACtC,QAAQ,EAAE,EAAE;KACf,CAAC;yDAYqC,+DAAgB,oBAAhB,+DAAgB,sDACb,uEAAwB,oBAAxB,uEAAwB;GAXrD,wBAAwB,CAsCpC;AAtCoC;;;;;;;;;;;;;;;;;;;;;;;ACnB+B;AACf;AACa;AAqBlE,IAAa,SAAS;IAlBtB;QAuBI,YAAO,GAAmB;YACtB,kBAAkB,EAAE,MAAM;YAC1B,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,CAAC;YACT,eAAe,EAAE,IAAI;SACxB,CAAC;QAEM,mBAAc,GAAG;YACrB;gBACI,IAAI,EAAE,0EAAY;gBAClB,KAAK,EAAE,cAAc;gBACrB,SAAS,EAAE,gDAAgD;gBAC3D,KAAK,EAAE,CAAC;aACX;YACD;gBACI,IAAI,EAAE,0EAAY;gBAClB,KAAK,EAAE,WAAW;gBAClB,SAAS,EAAE,mCAAmC;gBAC9C,KAAK,EAAE,CAAC;aACX;YACD;gBACI,IAAI,EAAE,0EAAY;gBAClB,KAAK,EAAE,WAAW;gBAClB,SAAS,EAAE,+BAA+B;gBAC1C,KAAK,EAAE,EAAE;aACZ;YACD;gBACI,IAAI,EAAE,0EAAY;gBAClB,KAAK,EAAE,uBAAuB;gBAC9B,SAAS,EAAE,sDAAsD;gBACjE,KAAK,EAAE,EAAE;aACZ;YACD;gBACI,IAAI,EAAE,0EAAY;gBAClB,KAAK,EAAE,yBAAyB;gBAChC,SAAS,EAAE,2CAA2C;gBACtD,KAAK,EAAE,CAAC;aACX;SACJ,CAAC;IAYN,CAAC;IAVG,mCAAe,GAAf;QACI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC;YAClC,0CAA0C;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAe,GAAf,UAAgB,QAAa;QACzB,wFAAwF;QACxF,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;IACtC,CAAC;IACL,gBAAC;AAAD,CAAC;AAtD8B;IAA1B,+EAAS,CAAC,wEAAc,CAAC;kDAAU,wEAAc,oBAAd,wEAAc;0CAAC;AAD1C,SAAS;IAlBrB,+EAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,6nBAaT;KACJ,CAAC;GAEW,SAAS,CAuDrB;AAvDqB;;;;;;;;;;;;;;;;;;ACvB8B;AAKpD,IAAa,iBAAiB;IAH9B;QAKU,YAAO,GAAW,iCAAiC,CAAC;QACpD,iBAAY,GAAW,IAAI,MAAM,CACvC,MAAM;cAEJ,2BAA2B;cAE3B,YAAY,GAAG,IAAI,CAAC,OAAO,GAAG,yBAAyB;cACvD,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,wBAAwB;cAErD,UAAU;cACV,IAAI,CAAC,OAAO;cACZ,IAAI,EACN,IAAI,CAAC,CAAC;IAUV,CAAC;IARC,qCAAS,GAAT,UAAU,KAAa;QACrB,IAAI,OAAO,CAAC;QACZ,GAAG,CAAC;YACF,OAAO,GAAG,KAAK,CAAC;YAChB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAC/C,CAAC,QAAQ,KAAK,KAAK,OAAO,EAAE;QAC5B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC;IACH,wBAAC;AAAD,CAAC;AAxBY,iBAAiB;IAH7B,0EAAI,CAAC;QACJ,IAAI,EAAE,eAAe;KACtB,CAAC;GACW,iBAAiB,CAwB7B;AAxB6B;;;;;;;;;;;;;;;;;;;;;ACLyD;AAEjC;AAStD,IAAa,0BAA0B;IAQrC,oCAAoB,KAAc;QAAd,UAAK,GAAL,KAAK,CAAS;QANlC,YAAO,GAAkB,EAAE,CAAC;QAC5B,iBAAY,GAAkB,EAAE,CAAC;QAM/B,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAC7C,CAAC;IAED,uDAAkB,GAAlB,UAAmB,GAAU;QAC3B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1F,CAAC;IAED,yCAAI,GAAJ;QACE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IAED,6CAAQ,GAAR;QAAA,iBAwBC;QAvBC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,iBAAO;YAChD,KAAI,CAAC,aAAa,GAAkB,OAAO,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,0CAA0C,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,GAAG,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAClH,KAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAU,CAAC;YACnC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAChB,GAAG,EAAE,KAAI,CAAC,aAAa,CAAC,IAAI;gBAC5B,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,IAAI;aAC9B,CAAC,CAAC;YACH,KAAI,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,WAAW,GAAG,CAAC,CAAC;YAC3C,KAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,iBAAO;YAChD,KAAI,CAAC,aAAa,GAAkB,OAAO,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,0CAA0C,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,GAAG,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAClH,KAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAU,CAAC;YACnC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAChB,GAAG,EAAE,KAAI,CAAC,aAAa,CAAC,IAAI;gBAC5B,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,IAAI;aAC9B,CAAC,CAAC;YACH,KAAI,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,WAAW,GAAG,CAAC,CAAC;YAC3C,KAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,iCAAC;AAAD,CAAC;AA9CY,0BAA0B;IANtC,+EAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,kCAAmD;QACnD,kCAAkD;KACnD,CAAC;yDAU2B,uEAAO,oBAAP,uEAAO;GARvB,0BAA0B,CA8CtC;AA9CsC;;;;;;;;;;ACXvC;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,kDAAkD,glC;;;;;;;;;;;;;;;;;;;;;;ACAlD;AAAA,sCAAsC;AAEC;AAEL;AACH;AAO/B;IAIE;QAFQ,cAAS,GAAG,GAAG,CAAC;QAGtB,IAAI,CAAC,SAAS,GAAG,IAAI,qDAAO,EAAgB,CAAC;IAC/C,CAAC;IAED,0BAAQ,GAAR,UAAS,GAAG,EAAE,QAAQ;QACpB,IAAI,CAAC,GAAG,GAAG,CAAC;QACZ,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,IAAI,SAAS,GAAG,UAAC,EAAE,EAAE,CAAC;YACpB,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE/B,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAE/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7B,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,2BAA2B;YAC3B,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC;YAAC,CAAC;YAC7D,0BAA0B;YAC1B,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,sBAAI,GAAJ,UAAK,GAAW,EAAE,IAAU;QAC1B,EAAE,CAAC,CAAC,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3C,MAAM,kCAAkC,CAAC;QAC3C,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,OAAE,IAAI,QAAE,CAAC,CAAC;IACrC,CAAC;IAED,oBAAE,GAAF,UAAM,GAAW;QAAjB,iBAMC;QALC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;aACjC,MAAM,CAAC,UAAC,KAAK;YACZ,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC,CAAC;aACD,GAAG,CAAC,eAAK,IAAI,OAAG,KAAK,CAAC,IAAI,EAAb,CAAa,CAAC,CAAC;IACjC,CAAC;IACH,cAAC;AAAD,CAAC","file":"main.bundle.js","sourcesContent":["import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { DashboardComponent } from '../dashboard-component';\r\nimport { RssService } from './rss.service';\r\nimport { FeedInfo, FeedEntry, FeedEnclosure } from '../../model/feed';\r\n\r\nimport { DialogService } from '../../shared/simple-dialog/dialog.service';\r\nimport { NgRadio } from '../../shared/events.service';\r\n\r\n@Component({\r\n  selector: 'app-component-rss',\r\n  template: `\r\n      <md-card masonry-brick style=\"min-width: 280px; max-width: 320px; margin: 5px;\" (click)=\"onSelected()\">\r\n        <md-card-header *ngIf=\"items.length\">\r\n          <div md-card-avatar *ngIf=\"feed.image!=''\"><img src=\"{{feed.image}}\" style=\"width: 30px;\"/></div>\r\n          <md-card-title>{{feed.title}} <font color=\"red\">|</font> {{feed.author}}</md-card-title>\r\n          <md-card-subtitle>{{feed.description}} </md-card-subtitle>\r\n        </md-card-header>\r\n        <md-card-content *ngIf=\"!items.length\">\r\n          <md-spinner style=\"margin-bottom: 10px;\"></md-spinner>              \r\n          Loading data from... {{end_point}}\r\n        </md-card-content>\r\n        <md-card-content *ngIf=\"items.length\">\r\n          <md-list-item *ngFor=\"let item of items\">         \r\n            <button md-icon-button (click)=\"openDialog(item)\" mdTooltip=\"Play Audio\">\r\n              <md-icon>info</md-icon>\r\n            </button>\r\n            <button mdTooltip=\"View Description\" md-icon-button *ngIf=\"item.enclosure.type != null\" (click)=\"onSelectMedia(item.enclosure)\">\r\n              <md-icon>play_circle_filled</md-icon>\r\n            </button>            \r\n            {{item.title}}             \r\n          </md-list-item>\r\n        </md-card-content>\r\n        <md-card-actions style=\"text-align: right;\">\r\n          <button md-mini-fab (click)='onOpenLink()' mdTooltip=\"Open in New Window\" mdTooltipPosition=\"above\">\r\n            <md-icon>open_in_new</md-icon>\r\n          </button>\r\n          <button md-mini-fab (click)='onPullData()' mdTooltip=\"Refresh\" mdTooltipPosition=\"above\">\r\n            <md-icon>refresh</md-icon>\r\n          </button>\r\n        </md-card-actions>\r\n      </md-card>\r\n      `\r\n})\r\n\r\nexport class RssComponent implements DashboardComponent {\r\n\r\n  private feed: any = {};\r\n  private items: any = [];\r\n\r\n  @Input() title: string;\r\n  @Input() end_point: string;\r\n  @Input() count: number;\r\n\r\n  @Output() componentSelected = new EventEmitter();\r\n\r\n  constructor(\r\n    private feedService: RssService,\r\n    private dialogService: DialogService,\r\n    private radio: NgRadio\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.onPullData();\r\n  }\r\n\r\n  onPullData() {\r\n    this.feedService.getFeedContent(this.end_point)\r\n      .delay(1000)\r\n      .subscribe(\r\n      result => {\r\n        // console.log(result.items);\r\n        this.feed = result.feed,\r\n          this.items = result.items.filter((item, index) => { return index < this.count; });\r\n      },\r\n      error => console.log(error)\r\n      );\r\n  }\r\n\r\n  openDialog(feedEntry: FeedEntry) {\r\n    // console.log(feedEntry);\r\n    const title = feedEntry.title + '| ' + feedEntry.pubDate;\r\n    this.dialogService.confirm(title, feedEntry.description);\r\n  }\r\n\r\n  onSelectMedia(enclosure: FeedEnclosure) {\r\n    console.log('Media Selection Radio Casting:'  + enclosure.link);\r\n    const mediaType = enclosure.type.substring(0, enclosure.type.indexOf('/'));\r\n    const key = 'PlayMedia:' + mediaType;\r\n    // console.log('key: ' + key);\r\n    this.radio.cast(key, enclosure);\r\n  }\r\n\r\n  onSelected() {\r\n    // console.log('Component Selection Event Emitted:'  + this.end_point);\r\n    this.componentSelected.emit(this);\r\n  }\r\n\r\n  onOpenLink() {\r\n    window.open(this.feed.link, '_blank');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/cards/rss-component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Feed } from '../../model/feed';\n\n@Injectable()\nexport class RssService {\n\n  private rssToJsonServiceBaseUrl: string = 'https://rss2json.com/api.json?rss_url=';\n\n  constructor(\n    private http: Http\n  ) { }\n\n  getFeedContent(url: string): Observable<Feed> {\n    return this.http.get(this.rssToJsonServiceBaseUrl + url)\n      .map(this.extractFeeds)\n      .catch(this.handleError);\n  }\n\n  private extractFeeds(res: Response): Feed {\n    const feed = res.json();\n    return feed || {};\n  }\n\n  private handleError(error: any) {\n    // In a real world app, we might use a remote logging infrastructure\n    // We'd also dig deeper into the error to get a better message\n    const errMsg = (error.message) ? error.message :\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.error(errMsg); // log to console instead\n    return Observable.throw(errMsg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/cards/rss.service.ts","import { Observable } from 'rxjs/Rx';\nimport { SimpleDialogComponent } from './simple-dialog.component';\nimport { MdDialogRef, MdDialog, MdDialogConfig } from '@angular/material';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DialogService {\n\n    constructor(private dialog: MdDialog) { }\n\n    public confirm(title: string, message: string): Observable<boolean> {\n\n        let dialogRef: MdDialogRef<SimpleDialogComponent>;\n\n        dialogRef = this.dialog.open(SimpleDialogComponent);\n        dialogRef.componentInstance.title = title;\n        dialogRef.componentInstance.message = message;\n\n        return dialogRef.afterClosed();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/simple-dialog/dialog.service.ts","import { Component, OnInit } from '@angular/core';\nimport { MdDialog, MdDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-simple-dialog',\n  template: `\n      <h2 md-dialog-title>{{title}}</h2>\n      <md-dialog-content [innerHtml]=message></md-dialog-content>\n  `,\n  styleUrls: ['./simple-dialog.component.css']\n})\nexport class SimpleDialogComponent implements OnInit {\n\n  public message: string;\n  public title: string;\n\n  constructor(public dialogRef: MdDialogRef<SimpleDialogComponent>) { }\n\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/simple-dialog/simple-dialog.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 190;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 190\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    template: `\r\n        <md-toolbar style=\"background-color: black;\">\r\n            <span style=\"color: white;\">\r\n                <a href=\"\\\">\r\n                    <img \r\n                    src=\"/assets/borntolearnwild.png\" \r\n                    style=\"margin-right: 10px; width:30px; height: 30px;\" \r\n                    alt=\"Learn Wild | Not every site can become a great source of knowledge; but a great source of knowledge *can* come from any site.\">\r\n                </a>                \r\n            </span>\r\n            <span class=\"example-spacer\"></span>\r\n            <span style=\"width: 100%\"><app-single-media-player></app-single-media-player></span>            \r\n            <md-icon class=\"example-icon\" style=\"color: white;\">account_circle</md-icon>\r\n            <md-icon class=\"example-icon\" style=\"color: white;\">delete</md-icon>\r\n        </md-toolbar>\r\n        <div style=\"margin-top:5px;\">   \r\n            <dashboard></dashboard>\r\n        </div>        \r\n    `\r\n})\r\n\r\nexport class AppComponent {\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { MaterialModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MasonryModule } from 'angular2-masonry';\r\n\r\nimport { Dashboard } from './dashboard/dashboard';\r\nimport { RssComponent } from './dashboard/cards/rss-component';\r\nimport { DashboardComponentOutlet } from './dashboard/dashboard-component-outlet';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n// import { FeedCardComponent } from './feed-card/feed-card.component';\r\nimport { RssService } from './dashboard/cards/rss.service';\r\nimport { DialogService } from './shared/simple-dialog/dialog.service';\r\nimport { NgRadio } from './shared/events.service';\r\n\r\n// shared\r\nimport { StripHtmlTagsPipe } from './pipe/strip-html-tags.pipe';\r\nimport { SimpleDialogComponent } from './shared/simple-dialog/simple-dialog.component';\r\n\r\nimport { VgCoreModule } from 'videogular2/core';\r\nimport { VgControlsModule } from 'videogular2/controls';\r\nimport { VgOverlayPlayModule } from 'videogular2/overlay-play';\r\nimport { VgBufferingModule } from 'videogular2/buffering';\r\nimport { SingleMediaPlayerComponent } from './shared/single-media-player/single-media-player.component';\r\n\r\n@NgModule({\r\n\r\n  declarations: [\r\n    AppComponent,\r\n    Dashboard,\r\n    DashboardComponentOutlet,\r\n    RssComponent,\r\n    StripHtmlTagsPipe,\r\n    SimpleDialogComponent,\r\n    SingleMediaPlayerComponent\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    MasonryModule,\r\n\r\n    MaterialModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n\r\n    VgCoreModule,\r\n    VgControlsModule,\r\n    VgOverlayPlayModule,\r\n    VgBufferingModule\r\n  ],\r\n\r\n  providers: [\r\n    RssService,\r\n    DialogService,\r\n    NgRadio\r\n  ],\r\n\r\n  bootstrap: [\r\n    AppComponent\r\n    // don't do this:\r\n    // http://stackoverflow.com/questions/38787795/why-ngoninit-called-twice\r\n    // SingleMediaPlayerComponent\r\n  ],\r\n\r\n  entryComponents: [\r\n    RssComponent,\r\n    SimpleDialogComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {\r\n    Component,\r\n    ViewContainerRef,\r\n    ComponentFactoryResolver,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    OnChanges,\r\n    OnInit\r\n} from '@angular/core';\r\n\r\nimport { DashboardComponent } from './dashboard-component';\r\nimport { FeedEnclosure } from '../model/feed';\r\n\r\n@Component({\r\n    selector: 'dashboard-component-outlet',\r\n    template: ''\r\n})\r\n\r\nexport class DashboardComponentOutlet implements DashboardComponent, OnChanges, OnInit {\r\n\r\n    @Input() title: string;\r\n    @Input() end_point: string;\r\n    @Input() count: number;\r\n    @Output() componentSelected = new EventEmitter();\r\n    @Input() type;\r\n\r\n    private dynamicInstance: DashboardComponent;\r\n\r\n    constructor(private viewContainer: ViewContainerRef,\r\n        private componentFactoryResolver: ComponentFactoryResolver) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnChanges(changes) {\r\n\r\n        if (changes.type) {\r\n            this.viewContainer.clear();\r\n\r\n            // Create Component\r\n            const factory = this.componentFactoryResolver.resolveComponentFactory(this.type);\r\n            const componentRef = this.viewContainer.createComponent(factory);\r\n            this.dynamicInstance = componentRef.instance as DashboardComponent;\r\n\r\n            // Set up Event-Handlers and delegate to own handlers\r\n            this.dynamicInstance.componentSelected.subscribe(e => this.componentSelected.emit(e));\r\n        }\r\n\r\n        // Delegate Properties\r\n        if (changes.title) {\r\n            this.dynamicInstance.title = this.title;\r\n            this.dynamicInstance.end_point = this.end_point;\r\n            this.dynamicInstance.count = this.count;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard-component-outlet.ts","import { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { RssComponent } from './cards/rss-component';\r\nimport { AngularMasonry, MasonryOptions } from 'angular2-masonry';\r\nimport { FeedEnclosure } from '../model/feed';\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    template: `\r\n        <masonry style=\"margin: 0 auto;\">\r\n            <dashboard-component-outlet *ngFor=\"let info of componentInfos\"\r\n                [type]=\"info.type\" \r\n                [title]=\"info.title\" \r\n                [end_point]=\"info.end_point\"\r\n                [count]=\"info.count\"\r\n                (componentSelected)=\"selectComponent($event)\">\r\n            </dashboard-component-outlet>\r\n        </masonry>\r\n        <div *ngIf=\"selectedComponent\" class=\"col-sm-12\">\r\n            <b>Selected: </b> {{ selectedComponent.title }} | {{ selectedComponent.end_point }} | {{ selectedComponent.count }}\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class Dashboard implements AfterViewInit {\r\n    @ViewChild(AngularMasonry) masonry: AngularMasonry;\r\n\r\n    selectedComponent: Dashboard;\r\n\r\n    options: MasonryOptions = {\r\n        transitionDuration: '0.35',\r\n        fitWidth: true,\r\n        gutter: 5,\r\n        percentPosition: true\r\n    };\r\n\r\n    private componentInfos = [\r\n        {\r\n            type: RssComponent,\r\n            title: 'Freakonomics',\r\n            end_point: 'http://feeds2.feedburner.com/freakonomicsradio',\r\n            count: 6\r\n        },\r\n        {\r\n            type: RssComponent,\r\n            title: 'Channel 9',\r\n            end_point: 'https://channel9.msdn.com/all/rss',\r\n            count: 8\r\n        },\r\n        {\r\n            type: RssComponent,\r\n            title: 'Ted Talks',\r\n            end_point: 'https://www.ted.com/talks/rss',\r\n            count: 10\r\n        },\r\n        {\r\n            type: RssComponent,\r\n            title: 'Adventures in Angular',\r\n            end_point: 'https://feeds.feedwrench.com/AdventuresInAngular.rss',\r\n            count: 10\r\n        },\r\n        {\r\n            type: RssComponent,\r\n            title: 'Scott Hanselman\\'s blog',\r\n            end_point: 'http://feeds.hanselman.com/scotthanselman',\r\n            count: 4\r\n        }\r\n    ];\r\n\r\n    ngAfterViewInit() {\r\n        this.masonry.layoutComplete.subscribe(() => {\r\n            //console.log('masonry layout complete.');\r\n        });\r\n    }\r\n\r\n    selectComponent(selected: any) {\r\n        //console.log('Component Selection Event received by Dashboard: ' + selected.end_point);\r\n        this.selectedComponent = selected;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'stripHtmlTags'\n})\nexport class StripHtmlTagsPipe implements PipeTransform {\n\n  private tagBody: string = '(?:[^\"\\'>]|\"[^\"]*\"|\\'[^\\']*\\')*';\n  private tagOrComment: RegExp = new RegExp(\n    '<(?:'\n    // Comment body.\n    + '!--(?:(?:-*[^->])*--+|-?)'\n    // Special \"raw text\" elements whose content should be elided.\n    + '|script\\\\b' + this.tagBody + '>[\\\\s\\\\S]*?</script\\\\s*'\n    + '|style\\\\b' + this.tagBody + '>[\\\\s\\\\S]*?</style\\\\s*'\n    // Regular name\n    + '|/?[a-z]'\n    + this.tagBody\n    + ')>',\n    'gi');\n\n  transform(value: string): string {\n    let oldHtml;\n    do {\n      oldHtml = value;\n      value = value.replace(this.tagOrComment, '');\n    } while (value !== oldHtml);\n    return value.replace(/</g, '&lt;');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipe/strip-html-tags.pipe.ts","import { Component, OnInit, EventEmitter, Output, AfterViewInit } from '@angular/core';\nimport { FeedEnclosure } from '../../model/feed';\nimport { NgRadio } from '../../shared/events.service';\nimport { VgAPI } from 'videogular2/core';\n\n@Component({\n  selector: 'app-single-media-player',\n  templateUrl: './single-media-player.component.html',\n  styleUrls: ['./single-media-player.component.css']\n})\n\nexport class SingleMediaPlayerComponent implements OnInit {\n\n  sources: Array<Object> = [];\n  videoSources: Array<Object> = [];\n\n  selectedMedia: FeedEnclosure;\n  api: VgAPI;\n\n  constructor(private radio: NgRadio) {\n    console.log('Media Player Initialized...');\n  }\n\n  onVideoPlayerReady(api: VgAPI) {\n    this.api = api;\n    this.api.getDefaultMedia().subscriptions.loadedMetadata.subscribe(this.play.bind(this));\n  }\n\n  play() {\n    this.api.play();\n  }\n\n  ngOnInit() {\n    this.radio.on('PlayMedia:audio').subscribe(message => {\n      this.selectedMedia = <FeedEnclosure>message;\n      console.log('Media Selection Radio (AUDIO) Receiving:' + this.selectedMedia.link + '|' + this.selectedMedia.type);\n      this.sources = new Array<Object>();\n      this.sources.push({\n        src: this.selectedMedia.link,\n        type: this.selectedMedia.type\n      });\n      this.api.getDefaultMedia().currentTime = 0;\n      this.api.play();\n    });\n\n    this.radio.on('PlayMedia:video').subscribe(message => {\n      this.selectedMedia = <FeedEnclosure>message;\n      console.log('Media Selection Radio (VIDEO) Receiving:' + this.selectedMedia.link + '|' + this.selectedMedia.type);\n      this.sources = new Array<Object>();\n      this.sources.push({\n        src: this.selectedMedia.link,\n        type: this.selectedMedia.type\n      });\n      this.api.getDefaultMedia().currentTime = 0;\n      this.api.play();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/single-media-player/single-media-player.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/simple-dialog/simple-dialog.component.css\n// module id = 279\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/single-media-player/single-media-player.component.css\n// module id = 280\n// module chunks = 1","module.exports = \"<vg-player style=\\\"height: 50px;\\\" (onPlayerReady)=\\\"onVideoPlayerReady($event)\\\">\\n    <vg-controls>\\n        <vg-play-pause></vg-play-pause>\\n        <vg-playback-button></vg-playback-button>\\n\\n        <vg-time-display vgProperty=\\\"current\\\" vgFormat=\\\"mm:ss\\\"></vg-time-display>\\n\\n        <vg-scrub-bar>\\n            <vg-scrub-bar-current-time></vg-scrub-bar-current-time>\\n            <vg-scrub-bar-buffering-time></vg-scrub-bar-buffering-time>\\n        </vg-scrub-bar>\\n\\n        <vg-time-display vgProperty=\\\"left\\\" vgFormat=\\\"mm:ss\\\"></vg-time-display>\\n        <vg-time-display vgProperty=\\\"total\\\" vgFormat=\\\"mm:ss\\\"></vg-time-display>\\n\\n        <vg-mute></vg-mute>\\n\\n        <vg-fullscreen></vg-fullscreen>\\n    </vg-controls>\\n\\n    <audio #media [vgMedia]=\\\"media\\\" id=\\\"myAudio\\\" preload=\\\"auto\\\">\\n        <source *ngFor=\\\"let audio of sources\\\" [src]=\\\"audio.src\\\" [type]=\\\"audio.type\\\">\\n    </audio>\\n\\n    <!--<video #media [vgMedia]=\\\"media\\\" id=\\\"myAudio\\\" preload=\\\"auto\\\" crossorigin>\\n        <source *ngFor=\\\"let audio of sources\\\" [src]=\\\"audio.src\\\" [type]=\\\"audio.type\\\">\\n    </video>-->\\n\\n</vg-player>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/single-media-player/single-media-player.component.html\n// module id = 288\n// module chunks = 1","// https://github.com/govorov/ng-radio\n\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\n\ninterface RadioMessage {\n  key: string;\n  data?: any;\n}\n\nexport class NgRadio {\n  private _eventBus: Subject<RadioMessage>;\n  private separator = ':';\n\n  constructor() {\n    this._eventBus = new Subject<RadioMessage>();\n  }\n\n  keyMatch(key, wildcard) {\n    let w = '*';\n    let ww = '**';\n\n    let partMatch = (wl, k) => {\n      let match = (wl === w) || (wl === k);\n      return match;\n    };\n\n    let sep = this.separator;\n    let kArr = key.split(sep);\n    let wArr = wildcard.split(sep);\n\n    let kLen = kArr.length;\n    let wLen = wArr.length;\n    let max = Math.max(kLen, wLen);\n\n    for (let i = 0; i < max; i++) {\n      let cK = kArr[i];\n      let cW = wArr[i];\n      // '**' match all fragments\n      if (cW == ww && (typeof cK !== 'undefined')) { return true; }\n      // test if fragments match\n      if (!partMatch(cW, cK)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  cast(key: string, data?: any) {\n    if (typeof key !== 'string' || !key.length) {\n      throw 'Bad key. Please provide a string';\n    }\n    this._eventBus.next({ key, data });\n  }\n\n  on<T>(key: string): Observable<T> {\n    return this._eventBus.asObservable()\n      .filter((event) => {\n        return this.keyMatch(event.key, key);\n      })\n      .map(event => <T>event.data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/events.service.ts"],"sourceRoot":""}